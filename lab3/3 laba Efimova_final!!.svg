<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN"
 "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg viewBox="0 0 300 300" 
    xmlns='http://www.w3.org/2000/svg' 
    onload='start(event)' >  

<title> 3 лаб. Мультимедия, параллелепипед</title>
     <desc>
          Ефимова Дарья 22305
     </desc>


<style> 
    .rebro{
        fill: white;
        stroke: brown;
        stroke-width: 2;
	    stroke-linejoin: round;
    }

    .buttons{
        stroke: brown;
        stroke-width: 1;
        fill-opacity: 0;
        stroke-linejoin: round;
    }

    .lines{
        stroke-width: 1px;
        fill: none;
        stroke: purple;
    }
  </style>

<script type='javascript'> 
    <![CDATA[

    <!-- последовательность соединения ребер -->
    rebros = [[0,1],[0,2],[2,3],[1,3],[4,5],[6,7],[4,6],[5,7],[0,4],[1,5],[2,6],[3,7]] 

    <!-- координаты параллел-да -->
    x_coords = [0, 150, 0, 150, 0, 150, 0, 150];
    y_coords = [0, 0, 100, 100, 0, 0, 100, 100];
    z_coords = [0, 0, 0, 0, 100, 100, 100, 100]; 
    
    <!-- центр для вращения фигуры-->
    centre_x = 120;
    centre_y = 120;
    centre_z = 150;
    
    function start(event)
    {
        if (window.svgDocument == null)
        {
            svgDocument = event.target.ownerDocument;
        }
        init_figure();
    }

    <!-- рисовка фигуры -->
    function init_figure()
    {
        for(var i = 0; i < rebros.length; i++)
        {
            rebro = svgDocument.getElementById('rebro-' + i);
            rebro.setAttributeNS(null, 'x1', x_coords[rebros[i][0]]);
            rebro.setAttributeNS(null, 'x2', x_coords[rebros[i][1]]);
            rebro.setAttributeNS(null, 'y1', y_coords[rebros[i][0]]);
            rebro.setAttributeNS(null, 'y2', y_coords[rebros[i][1]]);
            rebro.setAttributeNS(null, 'z1', z_coords[rebros[i][0]]);
            rebro.setAttributeNS(null, 'z2', z_coords[rebros[i][1]]);
        }
    }

    <!-- мувинг по горизонтали -->
    function moveX(d)
    {
        for(var i = 0; i < x_coords.length; i++)
        {
            x_coords[i] += d;
        }
        init_figure();
    }

    <!-- мувинг по вертикали -->
    function moveY(d)
    {
        for(var i = 0; i < y_coords.length; i++)
        {
            y_coords[i] += d;
        }
        init_figure();
    }


    <!-- поворот вокруг оси Х -->
    function Rotate_X(rad)
    {
        for(var i = 0; i < x_coords.length; i++)
        {
            <!-- меняем координаты относительно центра  -->
            y = y_coords[i] - centre_y;
            z = z_coords[i] - centre_z;

            <!-- расстояние -->
            d = Math.sqrt(y*y + z*z);
            theta  = Math.atan2(y, z) + rad;
            y_coords[i] = centre_y + d * Math.sin(theta);
            z_coords[i] = centre_z + d * Math.cos(theta);
        }
        init_figure();
    }

    <!-- поворот вокруг оси Z -->   
    function Rotate_Z(rad)
    {
        for(var i = 0; i < z_coords.length; i++)
        {
            x = x_coords[i] - centre_x;
            y = y_coords[i] - centre_y;
            d = Math.sqrt(x*x + y*y);
            theta  = Math.atan2(x, y) + rad;
            x_coords[i] = centre_x + d * Math.sin(theta);
            y_coords[i] = centre_y + d * Math.cos(theta);
        }
        init_figure();
    }


    <!-- старт вращения по оси Х -->   
    function X_Start(rad)
    {
        Rotate_X(rad);
        rotateX_timeout = setInterval("Rotate_X(" + rad + ")", 10);
    }


    <!-- остановка вращения по оси Х -->
    function X_End()
	{
        if (typeof(rotateX_timeout) != "undefined")
        {
            clearTimeout(rotateX_timeout);
        }
	}

    <!-- старт вращения по оси Z -->
    function Z_Start(rad)
    {
        Rotate_Z(rad);
        rotateY_timeout = setInterval("Rotate_Z(" + rad + ")", 10);
    }

    <!-- остановка вращения по оси Z -->
    function Z_End()
	{
        if (typeof(rotateY_timeout) != "undefined")
        {
            clearTimeout(rotateY_timeout);
        }
	}

    <!-- старт движения по горизонтали -->
    function MoveX_Start(t)
    {
        moveX(t);
        MoveX_timeout = setInterval("moveX(" + t + ")", 10);
    }

    <!-- остановка движения по горизонтали -->    
    function MoveX_End()
	{
        if (typeof(MoveX_timeout) != "undefined")
        {
            clearTimeout(MoveX_timeout);
        }
	}
    
    <!-- старт движения по вертикали -->
    function MoveY_Start(t)
    {
        moveY(t);
        MoveY_timeout = setInterval("moveY(" + t + ")", 10);
    }

    <!-- остановка движения по вертикали -->    
    function MoveY_End()
	{
        if (typeof(MoveY_timeout) != "undefined")
        {
            clearTimeout(MoveY_timeout);
        }
	}
    ]]>

  </script> 

    <!-- стрелка на кооринатных прямых  -->
    <defs>
        <marker id="arrowhead" markerWidth="10" markerHeight="7" 
            refX="0" refY="3.5" orient="auto">
            <polygon points="0 0, 10 3.5, 0 7" />
        </marker>
    </defs>

    <!-- Оси координат -->
    <!-- ось Х -->
    <path class="lines" d="M100,170 L300, 170 " marker-end="url(#arrowhead)" />  
    <!-- ось Y -->
    <path class="lines" d="M100,170 L100,10" marker-end="url(#arrowhead)" />  
    <!-- ось Z -->
    <path class="lines" d="M100,170 L0,270" marker-end="url(#arrowhead)" />  

    <!-- подписи к осям -->
    <text x="290" y="180" font-size="9" >X</text>
    <text x="90" y="20" font-size="9" >Y</text>
    <text x="10" y="270" font-size="9" >Z</text>

    <!-- рисовка линий по координатам -->
    <g  transform="scale(0.5, 0.5), translate(200, 240)">
        <line id='rebro-0' class='rebro'/>
        <line id='rebro-1' class='rebro'/>
        <line id='rebro-2' class='rebro'/>
        <line id='rebro-3' class='rebro'/>
        <line id='rebro-4' class='rebro'/>
        <line id='rebro-5' class='rebro'/>
        <line id='rebro-6' class='rebro'/>
        <line id='rebro-7' class='rebro'/>
        <line id='rebro-8' class='rebro'/>
        <line id='rebro-9' class='rebro'/>
        <line id='rebro-10' class='rebro'/>
        <line id='rebro-11' class='rebro'/>
    </g>



    <!-- двигать вверх -->
    <path class="buttons"
          d="m -150 20 l 50 0 l 0 20 l -50 0 l 0 -20"
          onmousedown='MoveY_Start(-3)'
          onmouseout='MoveY_End()'
          onmouseup='MoveY_End()'
          />
     <text x="-132" y="35" font-size="12">Up</text>

    <!-- двигать вниз -->
    <path class="buttons"
          d="m -150 60 l 50 0 l 0 20 l -50 0 l 0 -20"
          onmousedown='MoveY_Start(3)'
          onmouseout='MoveY_End()'
          onmouseup='MoveY_End()'/>
    <text x="-137" y="75" font-size="12">Down</text>

    <!-- двигать влево -->
    <path class="buttons"
          d="m -80 60 l 50 0 l 0 20 l -50 0 l 0 -20"
          onmousedown='MoveX_Start(-3)'
          onmouseout='MoveX_End()'
          onmouseup='MoveX_End()'/>
    <text x="-70" y="75" font-size="12">Left</text>

    <!-- двигать вправо -->
    <path class="buttons"
          d="m -80 20 l 50 0 l 0 20 l -50 0 l 0 -20"
          onmousedown='MoveX_Start(3)'
          onmouseout='MoveX_End()'
          onmouseup='MoveX_End()'/>
    <text x="-70" y="35" font-size="12">Right</text>

    <!-- поворот по оси Х -->
    <path class="buttons"
          d="m -150 100 l 50 0 l 0 20 l -50 0 l 0 -20"
          onmousedown='X_Start(-0.05)'
          onmouseout='X_End()'
          onmouseup='X_End()'/>
    <text x="-145" y="115" font-size="10">Rotate (X)</text>

    <!-- поворот по оси Z -->
    <path class="buttons"
          d="m -80 100 l 50 0 l 0 20 l -50 0 l 0 -20"
          onmousedown='Z_Start(-0.05)'
          onmouseout='Z_End()'
          onmouseup='Z_End()'/>
    <text x="-75" y="115" font-size="10">Rotate (Z)</text>   
</svg>